let http = require('http');
let { createWorker } = require('../src');

let worker = createWorker(process.env.NODE_ENV);
let port = process.env.WORKER_PORT || 3001;

var workerServer = http.createServer(worker)


workerServer.listen(port);
workerServer.on('error', onError);
workerServer.on('listening', onListening);


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  let addr = workerServer.address();
  let bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.info('Worker gui listening on ' + bind);
}


